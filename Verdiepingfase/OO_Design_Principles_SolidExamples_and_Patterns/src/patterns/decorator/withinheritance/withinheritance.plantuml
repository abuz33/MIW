@startuml

title __WITHINHERITANCE's Class Diagram__\n

  namespace patterns.decorator.withinheritance {
    class patterns.decorator.withinheritance.Cheese {
    }
  }
  

  namespace patterns.decorator.withinheritance {
    class patterns.decorator.withinheritance.Olives {
    }
  }
  

  namespace patterns.decorator.withinheritance {
    abstract class patterns.decorator.withinheritance.Pizza {
        ~ description : String
        {abstract} + cost()
        + getDescription()
    }
  }
  

  namespace patterns.decorator.withinheritance {
    class patterns.decorator.withinheritance.PizzaStore {
        {static} + main()
    }
  }
  

  namespace patterns.decorator.withinheritance {
    class patterns.decorator.withinheritance.ThickcrustPizza {
        + ThickcrustPizza()
        + cost()
    }
  }
  

  namespace patterns.decorator.withinheritance {
    class patterns.decorator.withinheritance.ThincrustPizza {
        + ThincrustPizza()
        + cost()
    }
  }
  

  patterns.decorator.withinheritance.ThickcrustPizza -up-|> patterns.decorator.withinheritance.Pizza
  patterns.decorator.withinheritance.ThincrustPizza -up-|> patterns.decorator.withinheritance.Pizza


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
